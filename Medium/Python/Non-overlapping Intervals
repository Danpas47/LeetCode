'''
Given an array of intervals intervals where intervals[i] = [starti, endi], 
return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.
'''

'''
the overall time complexity is O(n log n)
'''

class Solution:
    def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int:
        result=0
        intervals = sorted(intervals,key=lambda x:x[1])
        prev = 0
        curr = 1
        while curr!=len(intervals):
            if intervals[prev][1]>intervals[curr][0]:
                result+=1
                curr+=1
            else:
                prev=curr
                curr+=1    
        return result
