'''
Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] 
such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.
'''


class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:

        def tsum(i):

            target=nums[i]
            seen={}        
            for j in range(i+1,len(nums)):
                diff = -(target+nums[j])
                if diff in seen:
                    result.add(tuple(sorted([target,nums[j],diff])))
                else:
                    seen[nums[j]]=1
        result=set()
        for i in range(len(nums)):
            tsum(i)
        return result
